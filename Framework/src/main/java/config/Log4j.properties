# The log4j levels follow the following order DEBUG>INFO>WARN>ERROR>FATAL
# If you set the rootLogger level to WARN then only the WARN, ERROR and FATAL level log messages will be displayed
# Appender - output destination
# Rolling File appender - The default maximum size of a file is 10MB
# Try DEBUG

log4j.rootLogger=INFO,CONSOLE,HTML,TTCC

log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
log4j.appender.CONSOLE.layout.ConversionPattern= %5p [%t] (%F:%L)- %m - Method name (%M)%n

log4j.appender.TTCC=org.apache.log4j.RollingFileAppender
log4j.appender.TTCC.File=./log/Application.log
log4j.appender.TTCC.layout=org.apache.log4j.TTCCLayout
log4j.appender.TTCC.layout.DateFormat=ISO8601
log4j.appender.TTCC.MaxBackupIndex=10
#log4j.appender.TTCC.Append=false

log4j.appender.HTML=org.apache.log4j.FileAppender
log4j.appender.HTML.File=./log/Log.html
log4j.appender.HTML.layout=org.apache.log4j.HTMLLayout
log4j.appender.HTML.layout.Title=Application log
log4j.appender.HTML.layout.LocationInfo=true

# TTCC layout format consists of time, thread, category and nested diagnostic context information
# Each conversion specifier starts with a percent sign (%) and is followed by optional format modifiers and a conversion character

# %F - Used to print file name where the logging request was issued
# %5p- Priority of the logging event should be left justified to a width of five characters
# %t - Used to output the name of the thread that generated the logging event
# %L - Used to output the line number from where the logging request was issued
# %m - Used to output the application supplied message associated with the logging event
# %M - Used to output the method name where the logging request was issued
# %n - next line
# %c{1} - The logging name we set via getLogger
# %d{ISO8601} - Formats a Date in the format "yyyy-MM-dd HH:mm:ss,SSS".
# %d{HH:mm:ss,SSS} - Used to output the date of the logging event
# %d{dd MMM yyyy HH:mm:ss,SSS} - we can specify date format specifier enclosed between braces

# NOTE: If we put the log4j.properties file under the root of the classpath, 
# then we won have to call the configure() method explicitly.

# http://www.codejava.net/coding/how-to-configure-log4j-as-logging-mechanism-in-java?showall=&start=1#ConfigureIndividualLogger
# https://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/PatternLayout.html
# In case of XML - DOMConfigurator.configure(log4jConfigFile.xml); 

# log4j.rootLogger=INFO,R
# log4j.appender.R=org.apache.log4j.RollingFileAppender
# log4j.appender.R.File=./log/testlog.log
# log4j.appender.R.layout=org.apache.log4j.PatternLayout
# log4j.appender.R.layout.ConversionPattern=%d - %c -%p - %m%n
